"""
Django settings for qualix_tz project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import typing
from pathlib import Path

from core.utils import envutils

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR: typing.Final = Path(__file__).resolve().parent.parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY: typing.Final[str] = os.getenv("APP_KEY", "")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG: typing.Final[bool] = envutils.str2bool(str(os.getenv("DEBUG", True)))

ALLOWED_HOSTS: typing.Final = ["*"]

ROOT_URLCONF: typing.Final = "qualix_tz.urls"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES: typing.Final = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


TEMPLATES: typing.Final = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION: typing.Final = "qualix_tz.wsgi.application"


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS: typing.Final = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE: typing.Final = "en-us"

TIME_ZONE: typing.Final = "UTC"

USE_I18N: typing.Final = True

USE_TZ: typing.Final = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL: typing.Final = "static/"
STATIC_ROOT: typing.Final = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# certs
MEDV_API_CERT: typing.Final = os.getenv("MEDV_API_CERT", "")
MEDV_API_KEY: typing.Final = os.getenv("MEDV_API_KEY", "")
MEDV_API_URL: typing.Final = os.getenv("MEDV_API_URL", "")
CA_PATH: typing.Final = Path(os.getenv("CAPATH", "not-configured"))
if CA_PATH.as_posix() == "not-configured":
    raise ValueError(
        "Improper configuration of capath. Consider adding CAPATH to .env"
    )
